{"version":3,"sources":["components/nav/Nav.module.css","components/profile/Profile.module.css","components/users/Users.module.css","components/dialogs/Dialogs.module.css","components/common/FormsControl/FormsControl.module.css","components/news/News.js","components/music/Music.js","components/settings/settings.js","redux/redusers/dialogsReducer.js","redux/actionType.js","components/dialogs/messageItem/MessageItem.js","components/dialogs/dialogItem/DialogItem.js","components/common/FormsControl/FormsControl.js","helper/FormValidation/FromValidation.js","components/dialogs/Dialogs.js","redux/selectors/dialogsSelectors.js","components/dialogs/DialogsContainer.js","hoc/authRedirect.js","components/nav/Nav.js","components/nav/NavContainer.js","components/common/Pagination/Pagination.js","components/users/Users.js","api/api.js","helper/objectHelper.js","redux/redusers/usersReducer.js","components/Preloader/Preloader.js","redux/selectors/usersSelector.js","components/users/UsersContainer.js","components/profile/ProfileInfo/ProfileStatus.js","components/profile/ProfileInfo/ProfileForm.js","components/profile/ProfileInfo/ProfileInfo.js","redux/redusers/profileReducer.js","components/profile/MyPosts/Post/Post.js","components/profile/MyPosts/MyPosts.js","components/profile/MyPosts/MyPostsContainer.js","components/profile/Profile.js","redux/selectors/profileSelectors.js","components/profile/ProfileContainer.js","components/header/Header.js","redux/redusers/AuthReducer.js","redux/redusers/appReducer.js","components/header/HeaderContainer.js","components/login/Login.js","App.js","serviceWorker.js","redux/redusers/sidebarReducer.js","redux/redusers/rootReducers.js","redux/store.js","index.js","components/login/Login.module.css","components/profile/MyPosts/MyPosts.module.css","components/common/Pagination/Pagination.module.css","assets/images/631929649c.png","components/header/Header.module.css"],"names":["module","exports","News","props","Music","Settings","initialState","dialogsData","id","name","messagesData","message","dialogsReducer","state","action","type","Math","random","text","withRouter","item","className","s","message_item","key","DialogItem","to","activeClassName","active","Textarea","input","meta","isError","touched","error","formControl","Input","createdField","placeholder","validate","component","Field","required","value","maxLengthCreator","maxLenght","length","minLengthCreator","mixLenght","maxLength50","AddReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","cols","rows","Dialogs","dialogsPage","dialogs","dialogs_item","map","messages","MessageItem","fromData","newMessage","addMessage","getDialogsPage","compose","connect","dispatch","Component","authRedirect","this","isAuth","React","authProfile","Nav","nav","activeLink","friends_title","friends","sidebar","friends_item","avatar","src","alt","NavContainer","Pagination","pagesInArray","totalItemsCount","pageSize","selectPage","selectedPage","itemCount","ceil","items","i","push","countArrayItem","useState","arrayItemNumber","setArrayItemNumber","useEffect","leftItemArrayPage","rightItemArrayPage","filteredItems","filter","pagination","prevPagesArr","onClick","idx","selected","page","nextPagesArr","Users","console","log","users","users_wrapper","user","users_block","avatar_block","photos","small","default_avatar","followed","disabled","isFollowing","some","unfollow","follow","general_info","fullName","status","cityName","countryName","instance","axios","withCredentials","baseURL","headers","usersApi","userId","post","delete","get","profileApi","then","response","data","photoFile","formData","FormData","append","put","authApi","email","password","rememberMe","updateObjInArray","objPropName","newObjProps","totalUsersCount","isLoading","followSuccess","unfollowSuccess","set_users","total_count","count","set_page","is_loading","types","is_following","usersReducer","Preloader","getUsers","usersPage","getPageSize","getTotalUsersCount","getSelectedPage","getIsLoading","getIsFollowing","UsersComponent","requestUsers","a","resultCode","totalCount","ProfileStatus","editMode","setEditMode","setStatus","profile_status","autoFocus","onBlur","updateStatus","onChange","e","target","changeStatusValue","onDoubleClick","ProfileEditorReduxForm","profile","info","contacts","Object","keys","ProfileInfo","onEditMode","updateProfileData","updateProfilePhoto","isOwner","large","defaultAvatar","files","initialValues","aboutMe","lookingForAJob","postsData","likeCount","formEditMode","getProfileInfo","setUserProfile","setProfilePhoto","profileReducer","newPost","postId","payload","Post","postItem","posts","minLength5","AddProfilePost","MyPosts","memo","profilePage","AddReduxProfilePost","new_post_block","addPost","MyPostsContainer","Profile","content","getProfile","getStatus","getUserId","getIsAuth","getEditMode","ProfileContainer","refreshProfile","match","params","history","getProfileStatus","prevProps","prevState","snapshot","profileData","getState","Header","header","auth_block","login","userLogout","auth","setAuthData","authReducer","initialized","initializeApp","initialized_success","HeaderContainer","maxLength","minLength","LoginReduxForm","login_form","form_group","formError","btn","userLogin","stopSubmit","_error","setUserLogin","Email","Password","App","path","render","DialogsContainer","UsersContainer","Login","app","Boolean","window","location","hostname","sidebarReducer","reducers","combineReducers","formReducer","appReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","reduxThunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,WAAa,wBAAwB,QAAU,qBAAqB,cAAgB,2BAA2B,OAAS,sB,mBCA1LD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,eAAiB,gCAAgC,KAAO,sBAAsB,SAAW,0BAA0B,KAAO,wB,qGCAhND,EAAOC,QAAU,CAAC,OAAS,sBAAsB,cAAgB,6BAA6B,YAAc,2BAA2B,OAAS,sBAAsB,aAAe,4BAA4B,aAAe,4BAA4B,OAAS,sBAAsB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,0BAA0B,SAAW,0B,mBCAjZD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,KAAO,sBAAsB,OAAS,wBAAwB,SAAW,0BAA0B,aAAe,gC,mBCApND,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,6JCU3DC,EAPF,SAACC,GACV,OACI,sCCKOC,EAPD,SAACD,GACX,OACI,uCCKOE,EAPE,SAACF,GACd,OACI,0C,eCJFG,EAAe,CACjBC,YAAc,CACV,CAAEC,GAAG,EAAGC,KAAK,UACb,CAAED,GAAG,EAAGC,KAAK,QACb,CAAED,GAAG,EAAGC,KAAK,UAEjBC,aAAe,CACX,CAAEF,GAAG,EAAGG,QAAQ,SAChB,CAAEH,GAAG,EAAGG,QAAQ,qBAChB,CAAEH,GAAG,EAAGG,QAAQ,QAsBTC,EAlBQ,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACrD,OAAQA,EAAOC,MACX,ICVmB,cDWf,OAAO,eACAF,EADP,CAEIH,aAAa,GAAD,mBAAMG,EAAMH,cAAZ,CAA0B,CAACF,GAAoB,IAAhBQ,KAAKC,SAAgBN,QAASG,EAAOI,UAGxF,QACI,OAAOL,I,iBEZJM,eARK,SAACC,GACjB,OACI,yBAAKC,UAAWC,IAAEC,aAAcC,IAAKJ,EAAKZ,IACrCY,EAAKT,Y,QCKHc,EAPI,SAACL,GAChB,OACI,yBAAKC,UAAWC,IAAEF,KAAMI,IAAKJ,EAAKX,KAAOO,KAAKC,SAAW,GACrD,kBAAC,IAAD,CAASS,GAAI,YAAcN,EAAKZ,GAAImB,gBAAiBL,IAAEM,QAAUR,EAAKX,Q,2CCJrEoB,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAS5B,EAAW,gCAC7C6B,EAAUD,EAAKE,SAAWF,EAAKG,MACnC,OACI,6BACI,yBAAKb,UAAWC,IAAEa,YAAc,KAAOH,EAAUV,IAAEY,MAAQ,KACvD,8CAAcJ,EAAY3B,KAE9B,yBAAKkB,UAAWC,IAAEa,YAAc,KAAOH,EAAUV,IAAEY,MAAQ,KACtDF,GAAW,8BAAOD,EAAKG,UAM3BE,EAAQ,SAAC,GAA6B,IAA5BN,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAS5B,EAAW,gCAC1C6B,EAAUD,EAAKE,SAAWF,EAAKG,MACnC,OACI,oCACI,yBAAKb,UAAWC,IAAEa,YAAc,KAAOH,EAAUV,IAAEY,MAAQ,KACvD,2CAAWJ,EAAY3B,KAE3B,yBAAKkB,UAAWC,IAAEa,YAAc,KAAOH,EAAUV,IAAEY,MAAQ,KACtDF,GAAW,8BAAOD,EAAKG,UAM3BG,EAAe,SAACC,EAAaC,EAAUC,EAAW/B,EAAMM,GACjE,OACI,kBAAC0B,EAAA,EAAD,CAAO1B,KAAMA,EACNN,KAAMA,EACN6B,YAAaA,EACbC,SAAUA,EACVC,UAAWA,KCpCbE,EAAW,SAAAC,GACpB,IAAIA,EAGJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,GAASA,EAAMG,OAASD,EACxB,MAAM,WAAN,OAAkBA,EAAlB,yBAMKE,EAAmB,SAACC,GAAD,OAAe,SAACL,GAC5C,GAAIA,GAASA,EAAMG,OAASE,EACxB,MAAM,WAAN,OAAkBA,EAAlB,yBCVFC,EAAcL,EAAiB,IAejCM,EAAsBC,YAAU,CAACC,KAAK,cAAhBD,EAdH,SAAChD,GACpB,OACI,0BAAMkD,SAAUlD,EAAMmD,cAClB,kBAACb,EAAA,EAAD,CAAOH,YAAa,WACb7B,KAAM,aACN+B,UAAWX,EACXU,SAAU,CAACG,EAAUO,GACrBM,KAAK,KAAKC,KAAK,MAEtB,4CA2BGC,EApBC,SAACtD,GACb,IAAIU,EAAQV,EAAMuD,YAOlB,OACI,yBAAKrC,UAAWC,IAAEqC,SACd,yBAAKtC,UAAWC,IAAEsC,cACb/C,EAAMN,YAAYsD,KAAI,SAACzC,GAAD,OAAUK,EAAWL,OAEhD,yBAAKC,UAAWC,IAAEwC,UACbjD,EAAMH,aAAamD,KAAI,SAACzC,GAAD,OAAU2C,EAAY3C,OAE/C,kBAAC8B,EAAD,CAAqBG,SAdZ,SAACW,GACjB,IAAI9C,EAAO8C,EAASC,WACpB9D,EAAM+D,WAAWhD,Q,cC9BZiD,EAAiB,SAACtD,GAC3B,OAAOA,EAAM6C,aCoBFU,cACXC,aAbkB,SAACxD,GACnB,MAAM,CACF6C,YAAcS,EAAetD,OAGZ,SAACyD,GACtB,MAAM,CACFJ,WAAY,SAAChD,GAAD,OAAUoD,ERYJ,SAACpD,GACvB,MAAO,CAACH,KAAK,cAAeG,QQbOgD,CAAWhD,UCXpB,SAACqD,GAC3B,IAIMC,EALmC,uKAOjC,OAAKC,KAAKtE,MAAMuE,OACT,kBAACH,EAAaE,KAAKtE,OADK,kBAAC,IAAD,CAAUuB,GAAI,eAPZ,GAKdiD,IAAMJ,WAOjC,OAAOF,aAXe,SAACxD,GAAD,MAAY,CAC9B6D,OAAQ7D,EAAM+D,YAAYF,UAUvBL,CAA0BG,KDItBJ,CAGbX,G,iBEaaoB,EAjCH,SAAC1E,GACT,OACI,yBAAKkB,UAAWC,IAAEwD,KACd,yBAAKzD,UAAWC,IAAEF,MACd,kBAAC,IAAD,CAASM,GAAG,WAAWC,gBAAiBL,IAAEyD,YAA1C,YAEJ,yBAAK1D,UAAWC,IAAEF,MACd,kBAAC,IAAD,CAASM,GAAG,WAAWC,gBAAiBL,IAAEyD,YAA1C,aAEJ,yBAAK1D,UAAWC,IAAEF,MACd,kBAAC,IAAD,CAASM,GAAG,QAAQC,gBAAiBL,IAAEyD,YAAvC,SAEJ,yBAAK1D,UAAWC,IAAEF,MACd,kBAAC,IAAD,CAASM,GAAG,SAASC,gBAAiBL,IAAEyD,YAAxC,UAEJ,yBAAK1D,UAAWC,IAAEF,MACd,kBAAC,IAAD,CAASM,GAAG,YAAYC,gBAAiBL,IAAEyD,YAA3C,aAEJ,yBAAK1D,UAAWC,IAAEF,MACd,kBAAC,IAAD,CAASM,GAAG,SAASC,gBAAiBL,IAAEyD,YAAxC,UAEJ,wBAAI1D,UAAWC,IAAE0D,eAAjB,YACA,yBAAK3D,UAAWC,IAAE2D,SACb9E,EAAM+E,QAAQD,QAAQpB,KAAI,SAACzC,GAAD,OAAW,yBAAKC,UAAWC,IAAE6D,aAAc3D,IAAKJ,EAAKZ,GAAKY,EAAKX,MACtF,yBAAKY,UAAWC,IAAE8D,OAAQ5D,IAAKJ,EAAKZ,IAChC,yBAAK6E,IAAI,0FAA0FC,IAAI,MAE3G,2BAAIlE,EAAKX,aCnBd8E,EAFMlB,aANC,SAACxD,GACnB,MAAM,CACFqE,QAASrE,EAAMqE,WAIFb,CAAyBQ,G,2DCwB/BW,EA/BI,SAAC,GAKhB,IAL8F,IAAD,IAA5EC,oBAA4E,MAA7D,GAA6D,EAAzDC,EAAyD,EAAzDA,gBAAiBC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aAEvEC,EAAY9E,KAAK+E,KAAKL,EAAkBC,GAExCK,EAAQ,GACHC,EAAI,EAAIA,GAAKH,EAAWG,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAiBnF,KAAK+E,KAAKD,EAAYL,GATkD,EAUjDW,mBAAS,GAVwC,mBAUxFC,EAVwF,KAUvEC,EAVuE,KAY7FC,qBAAU,WACND,EAAmBD,KACrB,IAEF,IAAIG,GAAqBH,EAAkB,GAAKZ,EAAe,EAC3DgB,EAAqBJ,EAAkBZ,EAEvCiB,EAAgBV,EAAMW,QAAO,SAAAV,GAAC,OAAIA,GAAKO,GAAqBP,GAAKQ,KAErE,OACI,yBAAKpF,UAAWC,IAAEsF,YACbP,EAAkB,EAAI,yBAAKhF,UAAWC,IAAEuF,aAAcC,QAAS,WAAKR,EAAmBD,EAAkB,KAAnF,MAAuG,KAC7HK,EAAc7C,KAAI,SAACzC,EAAK2F,GACrB,OAAO,0BAAMD,QAAS,kBAAMlB,EAAWxE,IAAOC,WAAYwE,IAAiBzE,EAAOE,IAAE0F,SAAW,IAAI,IAAM1F,IAAE2F,KAAMzF,IAAKuF,GAA/G,IAAsH3F,EAAtH,QAEV+E,EAAiBE,EAAkB,yBAAKhF,UAAWC,IAAE4F,aAAcJ,QAAS,WAAKR,EAAmBD,EAAkB,KAAnF,MAAuG,OCexIc,GAtCH,SAAChH,GACTiH,QAAQC,IAAI,UADO,IAEdzB,EAA8DzF,EAA9DyF,WAAYC,EAAkD1F,EAAlD0F,aAAcF,EAAoCxF,EAApCwF,SAAUD,EAA0BvF,EAA1BuF,gBAAiB4B,EAASnH,EAATmH,MAE1D,OACI,yBAAKjG,UAAWC,IAAEiG,eACd,kBAAC,EAAD,CACY5B,SAAUA,EACVC,WAAYA,EACZC,aAAcA,EACdJ,aAAc,GACdC,gBAAiBA,IAE5B4B,EAAMzD,KAAI,SAAC2D,GAAD,OACP,yBAAKnG,UAAWC,IAAEmG,YAAajG,IAAKgG,EAAKhH,IACrC,yBAAKa,UAAWC,IAAEoG,cACd,kBAAC,IAAD,CAAShG,GAAI,WAAa8F,EAAKhH,IAC3B,yBAAKa,UAAWC,IAAE8D,OAAQC,IAA0B,MAArBmC,EAAKG,OAAOC,MAAgBJ,EAAKG,OAAOC,MAAQC,IAAgBvC,IAAI,MAEtGkC,EAAKM,SACF,4BAAQC,SAAU5H,EAAM6H,YAAYC,MAAM,SAAAzH,GAAE,OAAIA,IAAOgH,EAAKhH,MAAKsG,QAAS,kBAAM3G,EAAM+H,SAASV,EAAKhH,MAApG,YACE,4BAAQuH,SAAU5H,EAAM6H,YAAYC,MAAM,SAAAzH,GAAE,OAAIA,IAAOgH,EAAKhH,MAAKsG,QAAS,kBAAM3G,EAAMgI,OAAOX,EAAKhH,MAAlG,WAEV,yBAAKa,UAAWC,IAAE8G,cACd,6BACI,yBAAK/G,UAAWC,IAAE+G,UAAWb,EAAK/G,MAClC,yBAAKY,UAAWC,IAAEgH,QAASd,EAAKc,SAEpC,yBAAKjH,UAAU,YACX,yBAAKA,UAAWC,IAAEiH,UAAW,sBAC7B,yBAAKlH,UAAWC,IAAEkH,aAAc,iC,4BCnCtDC,G,OAAWC,OAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAY,0CAOPC,GAAW,SACbC,GACH,OAAON,GAASO,KAAT,iBAAwBD,KAF1BD,GAAW,SAIXC,GACL,OAAON,GAASQ,OAAT,iBAA0BF,KAL5BD,GAAW,WAOuB,IAAjCjD,EAAgC,uDAAjB,EAAGF,EAAc,uDAAH,GACnC,OAAO8C,GAASS,IAAT,qBAA2BrD,EAA3B,kBAAiDF,KAQnDwD,GAAa,SACVJ,GACR,OAAON,GAASS,IAAT,kBAAwBH,IAC1BK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAH1BH,GAAa,SAKZI,GACN,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAASH,GAClBd,GAASkB,IAAT,gBAA8BH,EAAU,CAC3CX,QAAS,CACL,eAAgB,0BAVnBM,GAAa,SAcHK,GAEf,OADApC,QAAQC,IAAI,WAAYmC,GACjBf,GAASkB,IAAT,UAAwB,CAACH,cAhB3BL,GAAa,SAkBXJ,GACP,OAAON,GAASS,IAAT,0BAAgCH,IAClCK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SApB1BH,GAAa,SAsBRb,GACV,OAAOG,GAASkB,IAAT,iBAA+B,CAACrB,OAAOA,KAIzCsB,GAAU,WAEf,OAAOnB,GAASS,IAAT,WACFE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAH1BM,GAAU,SAKbC,EAAOC,EAAUC,GACnB,OAAOtB,GAASO,KAAK,cAAe,CAACa,QAAOC,WAAUC,gBANjDH,GAAU,WASf,OAAOnB,GAASQ,OAAO,gBCjElBe,GAAmB,SAAChE,EAAO+C,EAAQkB,EAAaC,GACzD,OAAOlE,EAAMnC,KAAI,SAACzC,GACd,OAAIA,EAAK6I,KAAiBlB,EACf,eAAI3H,EAAX,GAAoB8I,GAEb9I,MCDbd,GAAe,CACjBgH,MAAO,GACP3B,SAAU,GACVwE,gBAAiB,EACjBtE,aAAc,EACduE,WAAW,EACXpC,YAAa,IAwEJqC,GAAgB,SAACtB,GAC1B,MAAO,CAAChI,KfzEU,SeyEIgI,WAEbuB,GAAkB,SAACvB,GAC5B,MAAO,CAAChI,Kf3EY,We2EIgI,WAEfwB,GAAY,SAACjD,GACtB,MAAO,CAACvG,Kf5Ea,Ye4EIuG,UAEhBkD,GAAc,SAACC,GACxB,MAAO,CAAC1J,Kf9Ee,ce8EI0J,UAElBC,GAAW,SAAC7E,GACrB,MAAO,CAAC9E,KfhFoB,mBegFI8E,iBAEvB8E,GAAa,SAACC,GACvB,MAAO,CAAC7J,KfjFc,aeiFI6J,UAEjBC,GAAe,SAACA,EAAc9B,GACvC,MAAO,CAAChI,KfzFgB,eeyFI8J,eAAc9B,WAI/B+B,GA5FM,WAAmC,IAAlCjK,EAAiC,uDAAzBP,GAAcQ,EAAW,uCACnD,OAAQA,EAAOC,MACX,IfLc,SeMV,OAAO,eACAF,EADP,CAEIyG,MAAO0C,GAAiBnJ,EAAMyG,MAAOxG,EAAOiI,OAAQ,KAAM,CAACjB,UAAU,MAE7E,IfTgB,WeUZ,OAAO,eACAjH,EADP,CAEIyG,MAAO0C,GAAiBnJ,EAAMyG,MAAOxG,EAAOiI,OAAQ,KAAM,CAACjB,UAAU,MAE7E,IfZiB,Yeab,OAAO,eAAIjH,EAAX,CAAkByG,MAAM,YAAKxG,EAAOwG,SAExC,IfdmB,ceef,OAAO,eAAIzG,EAAX,CAAkBsJ,gBAAiBrJ,EAAO2J,QAE9C,IfhBwB,mBeiBpB,OAAO,eAAI5J,EAAX,CAAkBgF,aAAc/E,EAAO+E,eAE3C,IfjBkB,aekBd,OAAO,eAAIhF,EAAX,CAAkBuJ,UAAWtJ,EAAO8J,QAExC,IfzBoB,ee0BhB,OAAO,eACA/J,EADP,CAEImH,YAAalH,EAAO+J,aAAP,sBAA0BhK,EAAMmH,aAAhC,CAA6ClH,EAAOiI,SAC3DlI,EAAMmH,YAAYrB,QAAO,SAAAnG,GAAE,OAAIA,IAAOM,EAAOiI,YAE3D,QACI,OAAOlI,ICzBJkK,I,OAhBC,WACZ,OACI,yBAAK1J,UAAU,kBACX,yBAAKA,UAAU,cACX,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,kCCdH2J,GAAW,SAACnK,GACrB,OAAOA,EAAMoK,UAAU3D,OAEd4D,GAAc,SAACrK,GACxB,OAAOA,EAAMoK,UAAUtF,UAEdwF,GAAqB,SAACtK,GAC/B,OAAOA,EAAMoK,UAAUd,iBAEdiB,GAAkB,SAACvK,GAC5B,OAAOA,EAAMoK,UAAUpF,cAEdwF,GAAe,SAACxK,GACzB,OAAOA,EAAMoK,UAAUb,WAEdkB,GAAiB,SAACzK,GAC3B,OAAOA,EAAMoK,UAAUjD,aCFrBuD,G,4MAMF3F,WAAa,SAACxE,GACV,EAAKjB,MAAMqL,aAAapK,EAAM,EAAKjB,MAAMwF,W,kEAJzClB,KAAKtE,MAAMqL,aAAa/G,KAAKtE,MAAM0F,aAAcpB,KAAKtE,MAAMwF,Y,+BAO5D,OAAO,oCACFlB,KAAKtE,MAAMiK,UACJ,kBAAC,GAAD,MACF,kBAAC,GAAD,CACExE,WAAYnB,KAAKmB,WACjBoC,YAAavD,KAAKtE,MAAM6H,YACxBG,OAAQ1D,KAAKtE,MAAMgI,OACnBD,SAAUzD,KAAKtE,MAAM+H,SACrBrC,aAAcpB,KAAKtE,MAAM0F,aACzBF,SAAUlB,KAAKtE,MAAMwF,SACrB2B,MAAO7C,KAAKtE,MAAMmH,MAClB5B,gBAAkBjB,KAAKtE,MAAMgK,gBAC7Ba,SAAUvG,KAAKtE,MAAMqL,oB,GAtBZjH,aAwCdH,eACXC,aAZkB,SAACxD,GACnB,MAAO,CACHyG,MAAO0D,GAASnK,GAChB8E,SAAUuF,GAAYrK,GACtBsJ,gBAAiBgB,GAAmBtK,GACpCgF,aAAcuF,GAAgBvK,GAC9BuJ,UAAWiB,GAAaxK,GACxBmH,YAAasD,GAAezK,MAKP,CAACsH,OHKR,SAACY,GACnB,gDAAO,WAAOzE,GAAP,UAAAmH,EAAA,6DACHnH,EAASuG,IAAa,EAAM9B,IADzB,SAEkBD,GAAgBC,GAFlC,OAG8B,IAH9B,OAGUO,KAAKoC,YACdpH,EAAS+F,GAActB,IAE3BzE,EAASuG,IAAa,EAAO9B,IAN1B,2CAAP,uDGNkCb,SHed,SAACa,GACrB,gDAAO,WAAOzE,GAAP,UAAAmH,EAAA,6DACHnH,EAASuG,IAAa,EAAM9B,IADzB,SAEkBD,GAAkBC,GAFpC,OAG8B,IAH9B,OAGUO,KAAKoC,YACdpH,EAASgG,GAAgBvB,IAE7BzE,EAASuG,IAAa,EAAO9B,IAN1B,2CAAP,uDGhB4CyB,eAAaG,cAAYE,gBAAcW,aHN3D,SAAC3F,EAAcF,GACvC,gDAAO,WAAOrB,GAAP,gBAAAmH,EAAA,6DACHnH,EAASqG,IAAW,IACpBrG,EAASoG,GAAS7E,IAFf,SAGkBiD,GAAkBjD,EAAcF,GAHlD,OAGC0D,EAHD,OAIH/E,EAASiG,GAAUlB,EAASC,KAAKtD,QACjC1B,EAASkG,GAAYnB,EAASC,KAAKqC,aACnCrH,EAASqG,IAAW,IANjB,2CAAP,yDGIWvG,CAGbmH,I,oBCrBaK,GAjCO,SAACzL,GAAW,IAAD,EAEEiG,oBAAS,GAFX,mBAExByF,EAFwB,KAEbC,EAFa,OAGF1F,mBAASjG,EAAMmI,QAHb,mBAGxBA,EAHwB,KAGfyD,EAHe,KAK7BxF,qBAAU,WACNwF,EAAU5L,EAAMmI,UAClB,CAACnI,EAAMmI,SAgBT,OACI,yBAAKjH,UAAWC,KAAE0K,gBAEVH,EACI,2BAAOI,WAAW,EAAMC,OAftB,WACdJ,GAAY,GACZ3L,EAAMgM,aAAa7D,IAasC8D,SAAU,SAACC,GAAD,OAV/C,SAACA,GACrB,IAAI1J,EAAQ0J,EAAEC,OAAO3J,MACrBoJ,EAAUpJ,GAQgE4J,CAAkBF,IAAI1J,MAAO2F,EAAQvH,KAAK,SACtG,yBAAKyL,cAnBN,WACbV,GAAY,KAkBmCxD,GAAU,WCQlDmE,GAFgBtJ,YAAU,CAACC,KAAM,iBAAjBD,EA/BX,SAAC,GAA6B,IAA5BuJ,EAA2B,EAA3BA,QAASpJ,EAAkB,EAAlBA,aAC3B,OACI,0BAAMD,SAAUC,EAAcjC,UAAWC,KAAEqL,MACvC,wCACA,6BACI,6BACI,yCADJ,KACwBtK,EAAa,YAAY,CAACK,GAAWN,EAAQ,WAAY,SAEjF,6BACI,wCADJ,KACuBC,EAAa,WAAW,GAAIR,EAAW,UAAW,SAEzE,6BACI,iDADJ,KACgCQ,EAAa,GAAG,GAAID,EAAQ,iBAAkB,aAE9E,6BAAK,2DACAC,EAAa,+BAA+B,GAAIR,EAAW,4BAA6B,UAGjG,yBAAKR,UAAWC,KAAEsL,UACd,wCADJ,KACuBC,OAAOC,KAAKJ,EAAQE,UAAU/I,KAAI,SAACzC,GAAD,OACjD,yBAAKC,UAAWC,KAAEF,MACd,2BAAIA,GADR,KACoBsL,EAAQE,SAASxL,GAChCiB,EAAajB,EAAK,GAAIgB,EAAQ,YAAahB,EAAM,iBC6B3D2L,GAnDK,SAAC5M,GAAW,IAEvBuM,EAAuGvM,EAAvGuM,QAASP,EAA8FhM,EAA9FgM,aAAc7D,EAAgFnI,EAAhFmI,OAAQuD,EAAwE1L,EAAxE0L,SAAUmB,EAA8D7M,EAA9D6M,WAAYC,EAAkD9M,EAAlD8M,kBAAmBC,EAA+B/M,EAA/B+M,mBAAoBC,EAAWhN,EAAXgN,QAajG,OACI,6BACI,yBAAK9L,UAAS,UAAKC,KAAE8D,SACjB,yBAAKC,IAAKqH,EAAQ/E,OAAOyF,MAAQV,EAAQ/E,OAAOyF,MAAQC,IAAe/H,IAAI,KACzE6H,GAAW,2BAAOpM,KAAK,OAAOqL,SAV3B,SAACC,GACVA,EAAEC,OAAOgB,MAAMxK,OAAS,GACxBoK,EAAmBb,EAAEC,OAAOgB,MAAM,OAS9B,kBAAC,GAAD,CAAenB,aAAcA,EAAc7D,OAAQA,KAEtDuD,EACK,kBAAC,GAAD,CAAwB0B,cAAeb,EAASA,QAASA,EAASrJ,SAnB/D,SAACmG,GACdpC,QAAQC,IAAImC,GACZyD,EAAkBzD,GAClBwD,GAAW,MAiBD,yBAAK3L,UAAWC,KAAEqL,MACpB,4BAAQ7F,QAAS,WAAKkG,GAAW,KAAjC,QACA,6BACI,6BACI,yCADJ,KACwBN,EAAQrE,UAEhC,6BACI,wCADJ,KACuBqE,EAAQc,SAE/B,6BACI,iDADJ,KACgCd,EAAQe,eAAiB,MAAQ,MAEhEf,EAAQe,gBAAkB,6BAAK,2DAEpC,yBAAKpM,UAAWC,KAAEsL,UACd,wCADJ,KACuBC,OAAOC,KAAKJ,EAAQE,UAAU/I,KAAI,SAACzC,GAAD,OACjD,yBAAKC,UAAWC,KAAEF,MACd,2BAAIA,GADR,KACoBsL,EAAQE,SAASxL,WC5CvDd,GAAe,CACjBoN,UAAW,CACP,CAAClN,GAAI,EAAGG,QAAS,aAAcgN,UAAW,IAC1C,CAACnN,GAAI,EAAGG,QAAS,cAAegN,UAAW,GAC3C,CAACnN,GAAI,EAAGG,QAAS,KAAMgN,UAAW,KAEtCjB,QAAS,KACTkB,cAAc,EACdtF,OAAQ,IA+CCuF,GAAiB,SAAC9E,GAC3B,gDAAO,WAAMzE,GAAN,gBAAAmH,EAAA,sEACctC,GAAsBJ,GADpC,OACCO,EADD,OAEHhF,EAASwJ,GAAexE,IAFrB,2CAAP,uDAqDSyC,GAAY,SAACzD,GACtB,MAAO,CAACvH,KtB9Gc,asB8GIuH,WAOjBwF,GAAiB,SAACpB,GAC3B,MAAO,CAAC3L,KtBvHoB,mBsBuHI2L,YAGvBqB,GAAkB,SAACpG,GAC5B,MAAO,CAAC5G,KtBxHqB,oBsBwHI4G,WAItBqG,GAnHQ,WAAmC,IAAlCnN,EAAiC,uDAAzBP,GAAcQ,EAAW,uCACrD,OAAQA,EAAOC,MACX,ItBhBgB,WsBiBZ,IAAIkN,EAAU,CACVzN,GAAoB,IAAhBQ,KAAKC,SACTN,QAASG,EAAOI,KAChByM,UAAW,GAEf,OAAO,eACA9M,EADP,CAEI6M,UAAU,GAAD,mBAAM7M,EAAM6M,WAAZ,CAAuBO,MAGxC,ItB1BmB,csB2Bf,OAAO,eACApN,EADP,CACc6M,UAAW7M,EAAM6M,UAAU/G,QAAO,SAAAqC,GAAI,OAAIA,EAAKxI,IAAMM,EAAOoN,YAG9E,ItB9BwB,mBsB+BpB,OAAO,eACArN,EADP,CACc6L,QAAS5L,EAAO4L,UAGlC,ItBlCkB,asBmCd,OAAO,eACA7L,EADP,CACcyH,OAAQxH,EAAOwH,SAGjC,ItBtCsB,iBsBuClB,OAAO,eACAzH,EADP,CACc+M,aAAc9M,EAAOqN,UAGvC,ItB1CyB,oBsB2CrB,OAAO,eACAtN,EADP,CACc6L,QAAQ,eAAK7L,EAAM6L,QAAZ,CAAqB/E,OAAQ7G,EAAO6G,WAG7D,QACI,OAAO9G,I,oBCpCJuN,GAbF,SAACjO,GACV,OACI,yBAAKkB,UAAWC,KAAE+M,UACblO,EAAMmO,MAAMzK,KAAI,SAACzC,GAAD,OACb,yBAAKC,UAAS,UAAKC,KAAE8D,OAAP,YAAiB9D,KAAEF,MAAQI,IAAKR,KAAKC,SAAWG,EAAKZ,IACnE,yBAAK6E,IAAI,oHAAoHC,IAAI,KAChIlE,EAAKT,QACN,wCACA,8BAAOS,EAAKuM,iBCLtBY,GAAaxL,EAAiB,GAE9ByL,GAAiB,SAACrO,GACpB,OACI,0BAAMkD,SAAUlD,EAAMmD,cAClB,kBAACb,EAAA,EAAD,CAAOH,YAAa,WAAY7B,KAAM,UAAW+B,UAAWX,EAAUU,SAAU,CAACgM,IAAahL,KAAK,KAAKC,KAAK,MAC7G,0CAuBGiL,GAlBC9J,IAAM+J,MAAK,SAACvO,GACxB,IAAIU,EAAQV,EAAMwO,YAKdC,EAAsBzL,YAAU,CAACC,KAAK,eAAhBD,CAAgCqL,IAE1D,OACQ,6BACI,wCACA,yBAAKnN,UAAWC,KAAEuN,gBACd,kBAACD,EAAD,CAAqBvL,SAVvB,SAACW,GACX7D,EAAM2O,QAAQ9K,EAASiK,aAWf,kBAAC,GAAD,CAAMK,MAAOzN,EAAM6M,gBCbpBqB,GAFU1K,aAZH,SAACxD,GACnB,MAAO,CACH8N,YAAa9N,EAAM8N,gBAIF,SAACrK,GACtB,MAAM,CACFwK,QAAS,SAAC5N,GAAD,OAAUoD,EHuGJ,SAACpD,GACpB,MAAO,CAACH,KtBrHY,WsBqHIG,QGxGQ4N,CAAQ5N,QAInBmD,CAA6CoK,ICOvDO,GAlBC,SAAC,GAA8G,IAA7GtC,EAA4G,EAA5GA,QAASM,EAAmG,EAAnGA,WAAYY,EAAuF,EAAvFA,aAAczB,EAAyE,EAAzEA,aAAc7D,EAA2D,EAA3DA,OAAQ2E,EAAmD,EAAnDA,kBAAmBC,EAAgC,EAAhCA,mBAAoBC,EAAY,EAAZA,QAC9G,OAAKT,EAID,yBAAKrL,UAAWC,KAAE2N,SACd,kBAAC,GAAD,CAAahC,kBAAmBA,EACnBP,QAASA,EACTM,WAAYA,EACZb,aAAcA,EACd7D,OAAQA,EACRuD,SAAU+B,EACVV,mBAAoBA,EACpBC,QAASA,IACtB,kBAAC,GAAD,OAZG,kBAAC,GAAD,OCRF+B,GAAa,SAACrO,GACvB,OAAOA,EAAM8N,YAAYjC,SAEhByC,GAAY,SAACtO,GACtB,OAAOA,EAAM8N,YAAYrG,QAEhB8G,GAAY,SAACvO,GACtB,OAAOA,EAAM+D,YAAYpE,IAEhB6O,GAAY,SAACxO,GACtB,OAAOA,EAAM+D,YAAYF,QAEhB4K,GAAc,SAACzO,GACxB,OAAOA,EAAM8N,YAAYf,cCAvB2B,G,4MAEFC,eAAiB,WACb,IAAIzG,EAAS,EAAK5I,MAAMsP,MAAMC,OAAOlP,GAChCuI,IACDA,EAAS,EAAK5I,MAAM4I,SAEhB,EAAK5I,MAAMwP,QAAQzJ,KAAK,UAGhC,EAAK/F,MAAM0N,eAAe9E,GAC1B,EAAK5I,MAAMyP,iBAAiB7G,I,kEAG5BtE,KAAK+K,mB,yCAGUK,EAAWC,EAAWC,GACjCtL,KAAKtE,MAAMsP,MAAMC,OAAOlP,IAAMqP,EAAUJ,MAAMC,OAAOlP,IACrDiE,KAAK+K,mB,+BAIH,IAAD,EAC8G/K,KAAKtE,MAAnHuM,EADA,EACAA,QAASM,EADT,EACSA,WAAYb,EADrB,EACqBA,aAAc7D,EADnC,EACmCA,OAAQ4G,EAD3C,EAC2CA,WAAYtB,EADvD,EACuDA,aAAcX,EADrE,EACqEA,kBAAmBC,EADxF,EACwFA,mBACzFC,GAAW1I,KAAKtE,MAAMsP,MAAMC,OAAOlP,GACvC,OAAS,kBAAC,GAAD,iBAAaiE,KAAKtE,MAAlB,CACS8M,kBAAmBA,EACnBP,QAASA,EACTM,WAAYA,EACZY,aAAcA,EACdzB,aAAcA,EACd7D,OAAQA,EACR4G,WAAYA,EACZhC,mBAAoBA,EACpBC,QAASA,S,GAnCJ5I,aAiDhBH,eACXC,aARkB,SAACxD,GAAD,MAAY,CAC9B6L,QAASwC,GAAWrO,GACpByH,OAAQ6G,GAAUtO,GAClBkI,OAAQqG,GAAUvO,GAClB6D,OAAQ2K,GAAUxO,GAClB+M,aAAc0B,GAAYzO,MAGD,CAACiN,kBAAgBD,kBAAgB+B,iBNC9B,SAAC7G,GAC7B,gDAAO,WAAMzE,GAAN,gBAAAmH,EAAA,sEACctC,GAAqBJ,GADnC,OACCO,EADD,OAEHhF,EAASyH,GAAUzC,IAFhB,2CAAP,uDMF4E6C,aNOpD,SAAC7D,GACzB,gDAAO,WAAMhE,GAAN,UAAAmH,EAAA,sEACkBtC,GAAwBb,GAD1C,OAE8B,IAF9B,OAEUgB,KAAKoC,YACdpH,EAASyH,GAAUzD,IAHpB,2CAAP,uDMR0F0E,WNyCpE,SAACmB,GACvB,MAAO,CAACpN,KtBrGkB,iBsBqGIoN,YM1CwElB,kBNgBzE,SAAC+C,GAE9B,OADA5I,QAAQC,IAAI,KAAM2I,GAClB,yCAAO,WAAO1L,EAAU2L,GAAjB,kBAAAxE,EAAA,6DACG1C,EAASkH,IAAWrL,YAAYpE,GACtC4G,QAAQC,IAAI,SAAU0B,GAFnB,SAGoBI,GAA6B6G,GAHjD,OAI8B,KAD3B3G,EAHH,QAIUC,KAAKoC,YACdtE,QAAQC,IAAI,MAAOgC,GACnB/E,EAASuJ,GAAe9E,KAExB3B,QAAQC,IAAI,QAASgC,GARtB,2CAAP,yDMlByH6D,mBN+B3F,SAAC3D,GAC/B,gDAAO,WAAMjF,GAAN,gBAAAmH,EAAA,sEACkBtC,GAAoBI,GADtC,OAE8B,KAD7BF,EADD,QAEUC,KAAKoC,YACdpH,EAASyJ,GAAgB1E,EAASC,KAAKA,KAAK3B,SAH7C,2CAAP,yDM/BAxG,IAFWiD,CAIbmL,I,oBC7CaW,GAjBA,SAAC/P,GAIZ,OACI,4BAAQkB,UAAWC,KAAE6O,QACjB,kBAAC,IAAD,CAASzO,GAAG,YACR,yBAAK2D,IAAI,4EAA4EC,IAAI,MAE7F,yBAAKjE,UAAWC,KAAE8O,YACbjQ,EAAMyE,YAAYF,OACb,6BAAMvE,EAAMyE,YAAYyL,MAAxB,MAAiC,yBAAKvJ,QAV3C,WACT3G,EAAMmQ,eASyC,aACjC,kBAAC,IAAD,CAAS5O,GAAI,UAAb,Y,SCZhBpB,GAAe,CACjBE,GAAI,KACJqJ,MAAO,KACPwG,MAAO,KACP3L,QAAQ,GAiBC6L,GAAO,2DAAM,WAAOjM,GAAP,wBAAAmH,EAAA,sEACL7B,KADK,OAEE,KADpBN,EADkB,QAEboC,aAAmB,EACCpC,EAAKA,KAAzB9I,EADkB,EAClBA,GAAIqJ,EADc,EACdA,MAAOwG,EADO,EACPA,MAChB/L,EAASkM,GAAYhQ,EAAIqJ,EAAOwG,GAAO,KAJrB,2CAAN,uDA0BPG,GAAc,SAAChQ,EAAIqJ,EAAOwG,EAAO3L,GAC1C,MAAO,CAAC3D,K9BhCsB,qB8BgCIuI,KAAM,CAAC9I,KAAIqJ,QAAOwG,QAAO3L,YAGhD+L,GA5CK,WAAmC,IAAlC5P,EAAiC,uDAAzBP,GAAcQ,EAAW,uCAClD,OAAQA,EAAOC,MACX,I9BO0B,qB8BNtB,OAAO,eACAF,EADP,GAEOC,EAAOwI,MAGlB,QACI,OAAOzI,IChBbP,GAAe,CACjBoQ,aAAa,GAgBJC,GAAgB,kBAAM,SAACrM,GACdA,EAASiM,MACfnH,MAAK,WACb9E,EAASsM,WAIJA,GAAsB,WAC/B,MAAO,CAAC7P,K/BXuB,wB+BcpB0P,GAxBK,WAAmC,IAAlC5P,EAAiC,uDAAzBP,GAAcQ,EAAW,uCAClD,OAAQA,EAAOC,MACX,I/BQ2B,sB+BPvB,OAAO,eACAF,EADP,CAEI6P,aAAa,IAGrB,QACI,OAAO7P,ICVbgQ,G,uKAGE,OAAO,kBAAC,GAAD,iBAAYpM,KAAKtE,MAAjB,CAAwBmQ,WAAY7L,KAAKtE,MAAMmQ,WAAY1L,YAAaH,KAAKtE,MAAMyE,mB,GAHpEL,aAUfF,gBAJO,SAACxD,GAAD,MAAW,CAC7B+D,YAAa/D,EAAM+D,eAGiB,CAAC+L,iBAAeJ,QAAMD,WFyBpC,WACtB,gDAAO,WAAMhM,GAAN,UAAAmH,EAAA,sEACkB7B,KADlB,OAE8B,IAF9B,OAEUN,KAAKoC,YACdpH,EAASkM,GAAY,KAAM,KAAM,MAAM,IAHxC,2CAAP,wDE1BWnM,CAA4DwM,I,oBCPrEC,GAAYlO,EAAiB,IAC7BmO,GAAYhO,EAAiB,GAsB/BiO,GAAiB7N,YAAU,CAACC,KAAM,SAAjBD,EApBH,SAAChD,GACf,OACI,0BAAMkD,SAAUlD,EAAMmD,aAAcjC,UAAWC,KAAE2P,YAC7C,yBAAK5P,UAAWC,KAAE4P,YACb7O,EAAa,QAAQ,CAACK,EAASoO,GAAWC,IAAY,QAAU,QAAS,SAE9E,yBAAK1P,UAAWC,KAAE4P,YACb7O,EAAa,WAAW,CAACK,EAASoO,GAAWC,IAAY,QAAU,WAAY,aAEpF,yBAAK1P,UAAWC,KAAE4P,YACb7O,EAAa,KAAK,GAAI,QAAU,aAAc,aAElDlC,EAAM+B,MAAQ,yBAAKb,UAAWC,KAAE6P,WAC5BhR,EAAM+B,OACF,KACT,4BAAQb,UAAWC,KAAE8P,KAArB,aA6BG/M,gBANQ,SAACxD,GACpB,MAAM,CACF6D,OAAQ7D,EAAM+D,YAAYF,UAIK,CAAC2M,UHzBf,SAACxH,EAAOC,EAAUC,GACvC,gDAAO,WAAMzF,GAAN,gBAAAmH,EAAA,sEACkB7B,GAAcC,EAAOC,EAAUC,GADjD,OAE8B,KAD7BV,EADD,QAEUC,KAAKoC,WACdpH,EAASiM,MAETjM,EAASgN,aAAW,QAAS,CAACC,OAAQlI,EAASC,KAAKxF,SAAS,MAL9D,2CAAP,wDGwBWO,EAtBD,SAAClE,GAKX,OAAGA,EAAMuE,OACE,kBAAC,IAAD,CAAUhD,GAAG,aAIpB,6BACI,qCACA,kBAACsP,GAAD,CAAgBQ,aAAcrR,EAAMkR,UAAWhO,SAXtC,SAACmG,GAAc,IACtBiI,EAAgCjI,EAAhCiI,MAAOC,EAAyBlI,EAAzBkI,SAAU3H,EAAeP,EAAfO,WACvB5J,EAAMkR,UAAWI,EAAOC,EAAU3H,UCrBpC4H,G,kLAEElN,KAAKtE,MAAMwQ,kB,+BAIX,OAAKlM,KAAKtE,MAAMuQ,YAIZ,yBAAKrP,UAAU,eACX,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACX,kBAAC,IAAD,CAAOuQ,KAAK,gBAAgBC,OAAS,kBAAM,kBAAC,GAAD,SAC3C,kBAAC,IAAD,CAAQD,KAAK,WAAWC,OAAS,kBAAM,kBAACC,EAAD,SACvC,kBAAC,IAAD,CAAOF,KAAK,SAASpP,UAAWuP,KAChC,kBAAC,IAAD,CAAOH,KAAK,QAAQpP,UAAWtC,IAC/B,kBAAC,IAAD,CAAO0R,KAAK,SAASpP,UAAWpC,IAChC,kBAAC,IAAD,CAAOwR,KAAK,YAAYpP,UAAWnC,IACnC,kBAAC,IAAD,CAAOuR,KAAK,SAASpP,UAAWwP,OAbjC,kBAAC,GAAD,U,GAPDzN,aA8BHH,eACXjD,IACAkD,aALoB,SAACxD,GAAD,MAAY,CAChC6P,YAAa7P,EAAMoR,IAAIvB,eAIC,CAACC,mBAFdvM,CAGZuN,ICtCiBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5C,MACvB,2DCjBN,IAAMnP,GAAe,CACjB2E,QAAQ,CACJ,CAACzE,GAAG,EAAGC,KAAM,SACb,CAACD,GAAG,EAAGC,KAAM,QACb,CAACD,GAAG,EAAGC,KAAM,UAQN6R,GAJQ,WAAmC,IAAlCzR,EAAiC,uDAAzBP,GAAyB,iCAErD,OAAOO,G,UCFA0R,GAAWC,YAAgB,CAClC9O,YAAY9C,EACZ+N,YAAYX,GACZ9I,QAAQoN,GACRrH,UAAUH,GACVlG,YAAY6L,GACZrN,KAAMqP,KACNR,IAAKS,K,UCXHC,GACgB,kBAAXR,QACPA,OAAOS,qCACHT,OAAOS,qCAAqC,IACvCxO,IAEPyO,GAAQC,YAAYP,GAAUI,GAAiBI,YAAgBC,QAErEb,OAAOU,MAAQA,GAEAA,UCNfI,IAASpB,OACD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUgB,MAAOA,IACb,kBAAC,GAAD,QAGZK,SAASC,eAAe,SJoHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlK,MAAK,SAAAmK,GACJA,EAAaC,gBAEdC,OAAM,SAAAvR,GACLkF,QAAQlF,MAAMA,EAAMvB,a,mBKxI5BX,EAAOC,QAAU,CAAC,WAAa,0BAA0B,IAAM,mBAAmB,UAAY,2B,mBCA9FD,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,OAAS,wBAAwB,KAAO,sBAAsB,SAAW,4B,mBCA5ID,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,+BAA+B,SAAW,6BAA6B,aAAe,iCAAiC,aAAe,mC,mBCDrMD,EAAOC,QAAU,IAA0B,wC,mBCC3CD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,8B","file":"static/js/main.4bf766d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2l-YZ\",\"item\":\"Nav_item__2Rd6k\",\"activeLink\":\"Nav_activeLink__1Wz63\",\"friends\":\"Nav_friends__16uo1\",\"friends_title\":\"Nav_friends_title__2u-iV\",\"avatar\":\"Nav_avatar__2DmmW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2zZGs\",\"avatar\":\"Profile_avatar__27k2E\",\"profile_status\":\"Profile_profile_status__2e73m\",\"info\":\"Profile_info__2itnr\",\"contacts\":\"Profile_contacts__1a2qS\",\"item\":\"Profile_item__Uhc4u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"d_flex\":\"Users_d_flex__2BebI\",\"users_wrapper\":\"Users_users_wrapper__2rr0L\",\"users_block\":\"Users_users_block__3Sl-Z\",\"avatar\":\"Users_avatar___s0pW\",\"avatar_block\":\"Users_avatar_block__1RWWx\",\"general_info\":\"Users_general_info__2-DKS\",\"status\":\"Users_status__13eJz\",\"countryName\":\"Users_countryName__10nKC\",\"page\":\"Users_page__2mKcR\",\"pagination\":\"Users_pagination__33Qwc\",\"selected\":\"Users_selected__3w-2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3i6Ij\",\"dialogs_item\":\"Dialogs_dialogs_item__32k6Q\",\"item\":\"Dialogs_item__Yd-kV\",\"active\":\"Dialogs_active__29h-a\",\"messages\":\"Dialogs_messages__1dMiD\",\"message_item\":\"Dialogs_message_item__2ceay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1ZwPZ\",\"error\":\"FormsControl_error__2Zkz5\"};","import React from \"react\";\n// import s from './News.module.css'\n\n\nconst News = (props) =>{\n    return(\n        <div>\n            News\n        </div>\n    )\n}\nexport default News","import React from \"react\";\n// import s from './Music.module.css'\n\n\nconst Music = (props) =>{\n    return(\n        <div>\n            Music\n        </div>\n    )\n}\nexport default Music","import React from \"react\";\n// import s from './settings.module.css'\n\n\nconst Settings = (props) =>{\n    return(\n        <div>\n            Settings\n        </div>\n    )\n};\nexport default Settings","import {ADD_MESSAGE} from \"../actionType\";\n\nconst initialState = {\n    dialogsData : [\n        { id:1, name:'Dimych'},\n        { id:2, name:'Maks'},\n        { id:3, name:'Taras'}\n    ],\n    messagesData : [\n        { id:1, message:'Hello'},\n        { id:2, message:'How is you name ?'},\n        { id:3, message:'Yo'}\n    ],\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            return {\n                ...state,\n                messagesData: [...state.messagesData, {id: Math.random() * 100, message: action.text}],\n            }\n    }\n        default:\n            return state\n    }\n};\n\nexport const addMessage = (text) => {\n    return {type:'ADD_MESSAGE', text}\n};\n\n\nexport default dialogsReducer","export const ADD_POST = 'ADD_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE';\nexport const SET_STATUS = 'SET_STATUS';\nexport const FORM_EDIT_MODE = 'FORM_EDIT_MODE';\nexport const SET_PROFILE_PHOTO = 'SET_PROFILE_PHOTO';\n\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\n\n\nexport const FOLLOW = 'FOLLOW';\nexport const UNFOLLOW = 'UNFOLLOW';\nexport const IS_FOLLOWING = 'IS_FOLLOWING';\nexport const SET_USERS = 'SET_USERS';\nexport const TOTAL_COUNT = 'TOTAL_COUNT';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\n\nexport const IS_LOADING = 'IS_LOADING';\nexport const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\n\nexport const SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\nexport const SET_USER_LOGIN = 'SET_USER_LOGIN'\nexport const LOGIN = 'LOGIN'\nexport const LOGOUT = 'LOGOUT'\n\n\n\n","import React from \"react\";\nimport s from '../Dialogs.module.css'\nimport {withRouter} from \"react-router-dom\";\n\nconst MessageItem = (item) => {\n    return(\n        <div className={s.message_item} key={item.id}>\n            {item.message}\n        </div>\n    )\n}\n\nexport default withRouter(MessageItem)","import React from \"react\";\nimport s from '../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\n\nconst DialogItem = (item) => {\n    return(\n        <div className={s.item} key={item.name + Math.random() + 1}>\n            <NavLink to={'/dialogs/' + item.id} activeClassName={s.active} >{item.name}</NavLink>\n        </div>\n    )\n}\nexport default DialogItem","import React from \"react\";\nimport s from './FormsControl.module.css'\nimport {Field} from \"redux-form\";\n\nexport const Textarea = ({input, meta, ...props}) => {\n    let isError = meta.touched && meta.error\n    return(\n        <div>\n            <div className={s.formControl + ' ' + (isError ? s.error : '')}>\n                <textarea {...input } {...props}/>\n            </div>\n            <div className={s.formControl + ' ' + (isError ? s.error : '')}>\n                {isError && <span>{meta.error}</span>}\n            </div>\n        </div>\n    )\n}\n\nexport const Input = ({input, meta, ...props}) => {\n    let isError = meta.touched && meta.error\n    return(\n        <>\n            <div className={s.formControl + ' ' + (isError ? s.error : '')}>\n                <input {...input } {...props}/>\n            </div>\n            <div className={s.formControl + ' ' + (isError ? s.error : '')}>\n                {isError && <span>{meta.error}</span>}\n            </div>\n        </>\n    )\n}\n\nexport const createdField = (placeholder, validate, component, name, type) => {\n    return (\n        <Field type={type}\n               name={name}\n               placeholder={placeholder}\n               validate={validate}\n               component={component}/>\n    )\n}","import React from \"react\";\n\nexport const required = value => {\n    if (value) {\n        return undefined\n    }\n    return 'Field is Required'\n}\n\nexport const maxLengthCreator = (maxLenght) => (value) => {\n    if (value && value.length > maxLenght) {\n        return `Must be ${maxLenght} characters or less`;\n    }\n    return undefined\n}\n\n\nexport const minLengthCreator = (mixLenght) => (value) => {\n    if (value && value.length < mixLenght) {\n        return `Must be ${mixLenght} characters or more`;\n    }\n    return undefined\n}\n\n","import React from \"react\";\nimport s from './Dialogs.module.css'\nimport MessageItem from \"./messageItem/MessageItem\";\nimport DialogItem from \"./dialogItem/DialogItem\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControl/FormsControl\";\nimport {maxLengthCreator, required} from \"../../helper/FormValidation/FromValidation\";\n\n\nconst maxLength50 = maxLengthCreator(50)\nconst AddMessageForm = (props) => {\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <Field placeholder={'textarea'}\n                   name={'newMessage'}\n                   component={Textarea}\n                   validate={[required, maxLength50]}\n                   cols=\"40\" rows=\"5\"\n            />\n            <button>Send</button>\n        </form>\n    )\n}\n\nlet AddReduxMessageForm = reduxForm({form:'addMessage'})(AddMessageForm)\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n    let addNewMessage = (fromData) => {\n        let text = fromData.newMessage\n        props.addMessage(text)\n    };\n\n\n    return(\n        <div className={s.dialogs}>\n            <div className={s.dialogs_item}>\n                {state.dialogsData.map((item) => DialogItem(item))}\n            </div>\n            <div className={s.messages}>\n                {state.messagesData.map((item) => MessageItem(item))}\n            </div>\n               <AddReduxMessageForm onSubmit={addNewMessage}/>\n        </div>\n    )\n};\nexport default Dialogs\n","export const getDialogsPage = (state) => {\n    return state.dialogsPage\n}","import React from \"react\";\nimport {addMessage} from \"../../redux/redusers/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/authRedirect\";\nimport {compose} from \"redux\";\nimport {getDialogsPage} from \"../../redux/selectors/dialogsSelectors\";\n\n\nlet mapStateToProps = (state) => {\n    return{\n        dialogsPage : getDialogsPage(state)\n    }\n};\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        addMessage: (text) => dispatch(addMessage(text)),\n    }\n};\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n\n\n","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\nexport let withAuthRedirect = (Component) => {\n    let mapStateToProps = (state) => ({\n        isAuth: state.authProfile.isAuth\n    })\n\n    class authRedirect extends React.Component{\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component{...this.props}/>\n        }\n    }\n\n    return connect(mapStateToProps,)(authRedirect)\n}\n\n","import React from \"react\";\nimport s from './Nav.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst Nav = (props) =>{\n    return(\n        <nav className={s.nav}>\n            <div className={s.item}>\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/dialogs' activeClassName={s.activeLink} >Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/news' activeClassName={s.activeLink} >News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/music' activeClassName={s.activeLink} >Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/settings' activeClassName={s.activeLink} >Settings</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/users' activeClassName={s.activeLink} >Users</NavLink>\n            </div>\n            <h2 className={s.friends_title}>Friends:</h2>\n            <div className={s.friends}>\n                {props.sidebar.friends.map((item) => (<div className={s.friends_item} key={item.id + item.name}>\n                    <div className={s.avatar} key={item.id}>\n                        <img src=\"https://img.pngio.com/png-avatar-108-images-in-collection-page-3-png-avatar-300_300.png\" alt=\"\"/>\n                    </div>\n                    <p>{item.name}</p>\n                </div>))}\n            </div>\n        </nav>\n    )\n}\nexport default Nav","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Nav from \"./Nav\";\n\nlet mapStateToProps = (state) => {\n    return{\n        sidebar: state.sidebar\n    }\n}\n\nconst NavContainer = connect(mapStateToProps)(Nav);\n\nexport default NavContainer","import React, {useEffect, useState} from \"react\";\nimport s from './Pagination.module.css'\n\nconst Pagination = ({pagesInArray = 10, totalItemsCount, pageSize, selectPage, selectedPage}) => {\n\n    let itemCount = Math.ceil(totalItemsCount / pageSize) ;\n\n    let items = [];\n    for (let i = 1 ; i <= itemCount; i++){\n        items.push(i)\n    }\n\n    let countArrayItem = Math.ceil(itemCount / pagesInArray)\n    let [arrayItemNumber, setArrayItemNumber] = useState(1)\n\n    useEffect(() => {\n        setArrayItemNumber(arrayItemNumber)\n    },[])\n\n    let leftItemArrayPage = (arrayItemNumber - 1) * pagesInArray + 1;\n    let rightItemArrayPage = arrayItemNumber * pagesInArray;\n\n    let filteredItems = items.filter(i => i >= leftItemArrayPage && i <= rightItemArrayPage)\n\n    return(\n        <div className={s.pagination}>\n            {arrayItemNumber > 1 ? <div className={s.prevPagesArr} onClick={()=>{setArrayItemNumber(arrayItemNumber - 1)}}>{`<<`}</div> : null}\n            {filteredItems.map((item,idx)=>{\n                return <span onClick={() => selectPage(item)} className={(selectedPage === item ? s.selected + ' ':'') + s.page} key={idx}> {item} </span>\n            })}\n            {countArrayItem > arrayItemNumber ? <div className={s.nextPagesArr} onClick={()=>{setArrayItemNumber(arrayItemNumber + 1)}}>{`>>`}</div> : null}\n        </div>\n    )\n}\nexport default Pagination","import React from \"react\";\nimport s from './Users.module.css'\nimport default_avatar from '../../assets/images/631929649c.png'\nimport {NavLink} from \"react-router-dom\";\nimport Pagination from \"../common/Pagination/Pagination\";\n\n\nlet Users = (props) => {\n    console.log('render')\n    let {selectPage, selectedPage, pageSize, totalItemsCount, users} = props;\n\n    return(\n        <div className={s.users_wrapper}>\n            <Pagination\n                        pageSize={pageSize}\n                        selectPage={selectPage}\n                        selectedPage={selectedPage}\n                        pagesInArray={10}\n                        totalItemsCount={totalItemsCount}\n            />\n            {users.map((user) => (\n                <div className={s.users_block} key={user.id}>\n                    <div className={s.avatar_block}>\n                        <NavLink to={'profile/' + user.id}>\n                            <img className={s.avatar} src={user.photos.small != null ? user.photos.small : default_avatar} alt=\"\"/>\n                        </NavLink>\n                        {user.followed ?\n                            <button disabled={props.isFollowing.some( id => id === user.id)} onClick={() => props.unfollow(user.id)} >UnFollow</button>\n                            : <button disabled={props.isFollowing.some( id => id === user.id)} onClick={() => props.follow(user.id)}>Follow</button> }\n                    </div>\n                    <div className={s.general_info}>\n                        <div>\n                            <div className={s.fullName}>{user.name}</div>\n                            <div className={s.status}>{user.status}</div>\n                        </div>\n                        <div className='location'>\n                            <div className={s.cityName}>{\"user.location.city\"}</div>\n                            <div className={s.countryName}>{\"user.location.country\"}</div>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\nexport default Users","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        \"API-KEY\" : \"401d6721-3ffd-4885-b318-da9979dd55a0\"\n    },\n})\n\n\n\n\nexport const usersApi = {\n    follow(userId){\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId){\n        return instance.delete(`follow/${userId}`)\n    },\n    getUsers (selectedPage = 1, pageSize = 10){\n        return instance.get(`users?page=${selectedPage}&count=${pageSize}`)\n    },\n    getProfile (userId) {\n        return instance.get(`profile/${userId}`,)\n            .then(response => response.data)\n    }\n}\n\nexport const profileApi = {\n    getProfile (userId) {\n        return instance.get(`profile/${userId}`)\n            .then(response => response.data)\n    },\n    setPhoto (photoFile) {\n        const formData = new FormData()\n        formData.append('image', photoFile)\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    updateProfileData (formData) {\n        console.log('formData', formData)\n        return instance.put(`profile`, {formData})\n    },\n    getStatus (userId) {\n        return instance.get(`/profile/status/${userId}`)\n            .then(response => response.data)\n    },\n    updateStatus (status) {\n        return instance.put(`profile/status`, {status:status})\n    }\n}\n\nexport const authApi = {\n    me(){\n        return instance.get(`auth/me`,)\n            .then(response => response.data)\n    },\n    login(email, password, rememberMe){\n        return instance.post('/auth/login', {email, password, rememberMe})\n    },\n    logout(){\n        return instance.delete('/auth/login')\n    }\n}","export const updateObjInArray = (items, userId, objPropName, newObjProps) => {\n    return items.map((item) => {\n        if (item[objPropName] === userId) {\n            return {...item, ...newObjProps}\n        } else {\n            return item\n        }\n    })\n}","import {FOLLOW, IS_FOLLOWING, IS_LOADING, SET_CURRENT_PAGE, SET_USERS, TOTAL_COUNT, UNFOLLOW} from \"../actionType\";\nimport {usersApi} from \"../../api/api\";\nimport {updateObjInArray} from \"../../helper/objectHelper\";\n\nconst initialState = {\n    users: [],\n    pageSize: 50,\n    totalUsersCount: 0,\n    selectedPage: 1,\n    isLoading: true,\n    isFollowing: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjInArray(state.users, action.userId, \"id\", {followed: true})\n            };\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjInArray(state.users, action.userId, \"id\", {followed: false})\n            };\n        case SET_USERS:\n            return {...state, users: [...action.users]}\n\n        case TOTAL_COUNT:\n            return {...state, totalUsersCount: action.count}\n\n        case SET_CURRENT_PAGE:\n            return {...state, selectedPage: action.selectedPage}\n\n        case IS_LOADING:\n            return {...state, isLoading: action.types}\n\n        case IS_FOLLOWING:\n            return {\n                ...state,\n                isFollowing: action.is_following ? [...state.isFollowing, action.userId]\n                    : state.isFollowing.filter(id => id !== action.userId)\n            }\n        default:\n            return state\n    }\n};\n\n\nexport const requestUsers = (selectedPage, pageSize) => {\n    return async (dispatch) => {\n        dispatch(is_loading(true))\n        dispatch(set_page(selectedPage))\n        let response = await usersApi.getUsers(selectedPage, pageSize)\n        dispatch(set_users(response.data.items))\n        dispatch(total_count(response.data.totalCount))\n        dispatch(is_loading(false))\n    }\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        dispatch(is_following(true, userId))\n        let response = await usersApi.follow(userId)\n        if (response.data.resultCode === 0) {\n            dispatch(followSuccess(userId))\n        }\n        dispatch(is_following(false, userId))\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        dispatch(is_following(true, userId))\n        let response = await usersApi.unfollow(userId)\n        if (response.data.resultCode === 0) {\n            dispatch(unfollowSuccess(userId))\n        }\n        dispatch(is_following(false, userId))\n    }\n}\n\n\nexport const followSuccess = (userId) => {\n    return {type: FOLLOW, userId}\n};\nexport const unfollowSuccess = (userId) => {\n    return {type: UNFOLLOW, userId}\n};\nexport const set_users = (users) => {\n    return {type: SET_USERS, users}\n};\nexport const total_count = (count) => {\n    return {type: TOTAL_COUNT, count}\n};\nexport const set_page = (selectedPage) => {\n    return {type: SET_CURRENT_PAGE, selectedPage}\n};\nexport const is_loading = (types) => {\n    return {type: IS_LOADING, types}\n};\nexport const is_following = (is_following, userId) => {\n    return {type: IS_FOLLOWING, is_following, userId}\n};\n\n\nexport default usersReducer\n","import React from \"react\";\nimport \"./Preloader.css\"\n\nlet Preloader = () => {\n    return(\n        <div className='loader_wrapper'>\n            <div className=\"lds-roller\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )\n}\nexport default Preloader","export const getUsers = (state) => {\n    return state.usersPage.users\n}\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n}\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n}\nexport const getSelectedPage = (state) => {\n    return state.usersPage.selectedPage\n}\nexport const getIsLoading = (state) => {\n    return state.usersPage.isLoading\n}\nexport const getIsFollowing = (state) => {\n    return state.usersPage.isFollowing\n}\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Users from \"./Users\";\nimport {\n    follow, is_following, is_loading,\n    requestUsers, total_count, unfollow,\n} from \"../../redux/redusers/usersReducer\";\nimport Preloader from \"../Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getIsFollowing, getIsLoading, getPageSize,\n    getSelectedPage, getTotalUsersCount, getUsers\n} from \"../../redux/selectors/usersSelector\";\n\nclass UsersComponent extends Component{\n\n    componentDidMount() {\n        this.props.requestUsers(this.props.selectedPage, this.props.pageSize)\n    }\n\n    selectPage = (item) => {\n        this.props.requestUsers(item, this.props.pageSize)\n    };\n    render() {\n        return <>\n            {this.props.isLoading ?\n                    <Preloader/>\n                : <Users\n                    selectPage={this.selectPage}\n                    isFollowing={this.props.isFollowing}\n                    follow={this.props.follow}\n                    unfollow={this.props.unfollow}\n                    selectedPage={this.props.selectedPage}\n                    pageSize={this.props.pageSize}\n                    users={this.props.users}\n                    totalItemsCount= {this.props.totalUsersCount}\n                    getUsers={this.props.requestUsers}\n                />\n            }\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        selectedPage: getSelectedPage(state),\n        isLoading: getIsLoading(state),\n        isFollowing: getIsFollowing(state)\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {follow, unfollow, total_count, is_loading, is_following, requestUsers }),\n    // withAuthRedirect\n)(UsersComponent)\n","import React, {useEffect, useState} from \"react\";\nimport s from \"../Profile.module.css\";\n\nconst ProfileStatus = (props) => {\n\n    let [editMode , setEditMode] = useState(false)\n    let [status , setStatus] = useState(props.status)\n\n    useEffect(()=>{\n        setStatus(props.status)\n    },[props.status])\n\n    let editModeOn = () => {\n        setEditMode(true)\n    }\n    let editModeOff = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    let changeStatusValue = (e) => {\n        let value = e.target.value\n        setStatus(value)\n    }\n\n\n    return(\n        <div className={s.profile_status}>\n            {\n                editMode ?\n                    <input autoFocus={true} onBlur={editModeOff} onChange={(e) => changeStatusValue(e)} value={status} type=\"text\" />\n                    : <div onDoubleClick={editModeOn}>{status || \"-----\"}</div>\n            }\n        </div>\n    )\n}\nexport default ProfileStatus\n","import s from \"../Profile.module.css\";\nimport React from \"react\";\nimport {createdField, Input, Textarea} from \"../../common/FormsControl/FormsControl\";\nimport {required} from \"../../../helper/FormValidation/FromValidation\";\nimport {reduxForm} from \"redux-form\";\n\nconst ProfileForm = ({profile, handleSubmit}) => {\n    return(\n        <form onSubmit={handleSubmit} className={s.info}>\n            <button>Save</button>\n            <div>\n                <div>\n                    <b>Full name </b>: {createdField('Full name',[required], Input , 'fullName', 'text')}\n                </div>\n                <div>\n                    <b>About me </b>: {createdField('About me',[], Textarea , 'aboutMe', 'text')}\n                </div>\n                <div>\n                    <b>Looking for a job </b>: {createdField('',[], Input , 'lookingForAJob', 'checkbox')}\n                </div>\n                <div><b>LookingForAJobDescription : </b>\n                    {createdField('About my professional skills',[], Textarea , 'lookingForAJobDescription', 'text')}\n                </div>\n            </div>\n            <div className={s.contacts}>\n                <b>Contacts </b>: {Object.keys(profile.contacts).map((item) => (\n                    <div className={s.item}>\n                        <i>{item}</i>: {profile.contacts[item]}\n                        {createdField(item,[], Input , 'contacts.'+ item, 'text')}\n                    </div>\n                )\n            )}\n            </div>\n        </form>\n    )\n}\n\nconst ProfileEditorReduxForm = reduxForm({form: 'profileEditor'})(ProfileForm)\n\nexport default ProfileEditorReduxForm","import s from \"../Profile.module.css\";\nimport React from \"react\";\nimport defaultAvatar from '../../../assets/images/631929649c.png'\nimport ProfileStatus from './ProfileStatus'\nimport ProfileEditorReduxForm from \"./ProfileForm\";\n\nconst ProfileInfo = (props) => {\n\n    let {profile, updateStatus, status, editMode, onEditMode, updateProfileData, updateProfilePhoto, isOwner} = props;\n\n    const onSubmit = (formData) => {\n        console.log(formData)\n        updateProfileData(formData)\n        onEditMode(false)\n    }\n    let onSetPhoto = (e) => {\n        if (e.target.files.length > 0){\n            updateProfilePhoto(e.target.files[0])\n        }\n    }\n\n    return (\n        <div>\n            <div className={`${s.avatar}`}>\n                <img src={profile.photos.large ? profile.photos.large : defaultAvatar} alt=\"\"/>\n                { isOwner && <input type=\"file\" onChange={onSetPhoto}/>}\n                <ProfileStatus updateStatus={updateStatus} status={status}/>\n            </div>\n            {editMode\n                ? <ProfileEditorReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\n                : <div className={s.info}>\n                <button onClick={()=>{onEditMode(true)}}>Edit</button>\n                <div>\n                    <div>\n                        <b>Full name </b>: {profile.fullName}\n                    </div>\n                    <div>\n                        <b>About me </b>: {profile.aboutMe}\n                    </div>\n                    <div>\n                        <b>Looking for a job </b>: {profile.lookingForAJob ? 'Yes' : 'No'}\n                    </div>\n                    {profile.lookingForAJob && <div><b>lookingForAJobDescription </b></div>}\n                </div>\n                <div className={s.contacts}>\n                    <b>Contacts </b>: {Object.keys(profile.contacts).map((item) => (\n                        <div className={s.item}>\n                            <i>{item}</i>: {profile.contacts[item]}\n                        </div>\n                    )\n                )}\n                </div>\n            </div>\n            }\n        </div>\n    )\n};\nexport default ProfileInfo","import {ADD_POST, DELETE_POST, FORM_EDIT_MODE, SET_PROFILE_PHOTO, SET_STATUS, SET_USER_PROFILE} from \"../actionType\";\nimport {profileApi} from \"../../api/api\";\n\nconst initialState = {\n    postsData: [\n        {id: 1, message: 'First post', likeCount: 12},\n        {id: 1, message: 'Hey hey hey', likeCount: 9},\n        {id: 1, message: 'Yo', likeCount: 34}\n    ],\n    profile: null,\n    formEditMode: false,\n    status: ''\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: Math.random() * 100,\n                message: action.text,\n                likeCount: 0,\n            };\n            return {\n                ...state,\n                postsData: [...state.postsData, newPost],\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state, postsData: state.postsData.filter(post => post.id != action.postId)\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state, profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state, status: action.status\n            }\n        }\n        case FORM_EDIT_MODE: {\n            return {\n                ...state, formEditMode: action.payload\n            }\n        }\n        case SET_PROFILE_PHOTO: {\n            return {\n                ...state, profile: {...state.profile, photos: action.photos}\n            }\n        }\n        default:\n            return state\n    }\n};\n\n\nexport const getProfileInfo = (userId) => {\n    return async dispatch => {\n        let data = await profileApi.getProfile(userId)\n        dispatch(setUserProfile(data))\n    }\n}\nexport const getProfileStatus = (userId) => {\n    return async dispatch => {\n        let data = await profileApi.getStatus(userId)\n        dispatch(setStatus(data))\n    }\n}\nexport const updateStatus = (status) => {\n    return async dispatch => {\n        let response = await profileApi.updateStatus(status)\n        if (response.data.resultCode === 0) {\n            dispatch(setStatus(status))\n        }\n    }\n}\n\nexport const updateProfileData = (profileData) => {\n    console.log('IN', profileData)\n    return async (dispatch, getState) => {\n        const userId = getState().authProfile.id\n        console.log('userId', userId)\n        const response = await profileApi.updateProfileData(profileData)\n        if (response.data.resultCode === 0) {\n            console.log('YES', response)\n            dispatch(getProfileInfo(userId))\n        }else {\n            console.log('NO!!!', response)\n        }\n    }\n}\n\nexport const updateProfilePhoto = (photoFile) => {\n    return async dispatch => {\n        let response = await profileApi.setPhoto(photoFile)\n        if (response.data.resultCode === 0) {\n            dispatch(setProfilePhoto(response.data.data.photos))\n        }\n    }\n}\n\n\nexport const onEditMode = (payload) => {\n    return {type: FORM_EDIT_MODE, payload }\n}\n\nexport const deletePost = (postId) => {\n    return {type: DELETE_POST, postId}\n}\n\nexport const setStatus = (status) => {\n    return {type: SET_STATUS, status}\n};\n\nexport const addPost = (text) => {\n    return {type: ADD_POST, text}\n};\n\nexport const setUserProfile = (profile) => {\n    return {type: SET_USER_PROFILE, profile}\n};\n\nexport const setProfilePhoto = (photos) => {\n    return {type: SET_PROFILE_PHOTO, photos}\n};\n\n\nexport default profileReducer\n","import React from \"react\";\nimport s from '../MyPosts.module.css'\n\n\nconst Post = (props) =>{\n    return(\n        <div className={s.postItem}>\n            {props.posts.map((item) =>\n                <div className={`${s.avatar} ${s.item}`} key={Math.random() + item.id}>\n                <img src=\"https://images.unsplash.com/photo-1503023345310-bd7c1de61c7d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\" alt=\"\"/>\n                {item.message}\n                <span> liks </span>\n                <span>{item.likeCount}</span>\n            </div>)}\n        </div>\n    )\n}\nexport default Post","import React from \"react\";\nimport s from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\nimport {minLengthCreator} from \"../../../helper/FormValidation/FromValidation\";\n\nconst minLength5 = minLengthCreator(5)\n\nconst AddProfilePost = (props) => {\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <Field placeholder={'textarea'} name={'newPost'} component={Textarea} validate={[minLength5]} cols=\"40\" rows=\"5\"/>\n            <button>Send</button>\n        </form>\n    )\n}\n\nconst MyPosts = React.memo((props) => {\n    let state = props.profilePage;\n    let addPost = (fromData) => {\n        props.addPost(fromData.newPost)\n    }\n\n    let AddReduxProfilePost = reduxForm({form:'profilePost'})(AddProfilePost)\n\n    return(\n            <div>\n                <h3>My posts</h3>\n                <div className={s.new_post_block}>\n                    <AddReduxProfilePost onSubmit={addPost}/>\n                </div>\n                <Post posts={state.postsData}/>\n            </div>\n    )\n})\nexport default MyPosts","import React from \"react\";\nimport {addPost} from \"../../../redux/redusers/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        profilePage: state.profilePage\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        addPost: (text) => dispatch(addPost(text)),\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer","import React from \"react\";\nimport s from './Profile.module.css'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport Preloader from \"../Preloader/Preloader\";\n\nconst Profile = ({profile, onEditMode, formEditMode, updateStatus, status, updateProfileData, updateProfilePhoto, isOwner}) =>{\n    if (!profile){\n        return <Preloader/>\n    }\n    return(\n        <div className={s.content}>\n            <ProfileInfo updateProfileData={updateProfileData}\n                         profile={profile}\n                         onEditMode={onEditMode}\n                         updateStatus={updateStatus}\n                         status={status}\n                         editMode={formEditMode}\n                         updateProfilePhoto={updateProfilePhoto}\n                         isOwner={isOwner}/>\n            <MyPostsContainer />\n        </div>\n    )\n}\nexport default Profile\n","export const getProfile = (state) => {\n    return state.profilePage.profile\n}\nexport const getStatus = (state) => {\n    return state.profilePage.status\n}\nexport const getUserId = (state) => {\n    return state.authProfile.id\n}\nexport const getIsAuth = (state) => {\n    return state.authProfile.isAuth\n}\nexport const getEditMode = (state) => {\n    return state.profilePage.formEditMode\n}","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport Profile from \"./Profile\";\nimport {\n    getProfileInfo,\n    getProfileStatus, onEditMode,\n    setUserProfile, updateProfileData, updateProfilePhoto,\n    updateStatus\n} from \"../../redux/redusers/profileReducer\";\nimport {compose} from \"redux\";\nimport {getEditMode, getIsAuth, getProfile, getStatus, getUserId} from \"../../redux/selectors/profileSelectors\";\n\nclass ProfileContainer extends Component{\n\n    refreshProfile = () => {\n        let userId = this.props.match.params.id;\n        if (!userId){\n            userId = this.props.userId\n            if (!userId){\n                this.props.history.push('/login');\n            }\n        }\n        this.props.getProfileInfo(userId)\n        this.props.getProfileStatus(userId)\n    }\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.id != prevProps.match.params.id){\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        let {profile, onEditMode, updateStatus, status, getProfile, formEditMode, updateProfileData, updateProfilePhoto} = this.props;\n        let isOwner = !this.props.match.params.id\n        return ( <Profile {...this.props}\n                          updateProfileData={updateProfileData}\n                          profile={profile}\n                          onEditMode={onEditMode}\n                          formEditMode={formEditMode}\n                          updateStatus={updateStatus}\n                          status={status}\n                          getProfile={getProfile}\n                          updateProfilePhoto={updateProfilePhoto}\n                          isOwner={isOwner}\n        /> )\n    }\n}\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\n\nlet mapStateToProps = (state) => ({\n    profile: getProfile(state),\n    status: getStatus(state),\n    userId: getUserId(state),\n    isAuth: getIsAuth(state),\n    formEditMode: getEditMode(state)\n});\nexport default compose(\n    connect(mapStateToProps, {setUserProfile, getProfileInfo, getProfileStatus, updateStatus, onEditMode, updateProfileData, updateProfilePhoto }),\n    withRouter,\n    // withAuthRedirect\n)(ProfileContainer)","import React from \"react\";\nimport s from './Header.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) =>{\n    let Logout = () => {\n        props.userLogout()\n    }\n    return(\n        <header className={s.header}>\n            <NavLink to='/profile'>\n                <img src=\"http://logok.org/wp-content/uploads/2014/05/Total-logo-earth-1024x768.png\" alt=\"\"/>\n            </NavLink>\n            <div className={s.auth_block}>\n                {props.authProfile.isAuth\n                    ? <div>{props.authProfile.login} - <div onClick={Logout}> Log out</div></div>\n                    : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    )\n}\nexport default Header","import {SET_AUTH_USER_DATA} from \"../actionType\";\nimport {authApi} from \"../../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false,\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTH_USER_DATA: {\n            return {\n                ...state,\n                ...action.data,\n            }\n        }\n        default:\n            return state\n    }\n};\n\n\nexport const auth = () => async (dispatch) => {\n    let data = await authApi.me()\n    if (data.resultCode === 0) {\n        let {id, email, login} = data.data;\n        dispatch(setAuthData(id, email, login, true))\n    }\n}\nexport const userLogin = (email, password, rememberMe) => {\n    return async dispatch => {\n        let response = await authApi.login(email, password, rememberMe)\n        if (response.data.resultCode === 0) {\n            dispatch(auth())\n        } else {\n            dispatch(stopSubmit(\"login\", {_error: response.data.messages[0]}))\n        }\n    }\n}\nexport const userLogout = () => {\n    return async dispatch => {\n        let response = await authApi.logout()\n        if (response.data.resultCode === 0) {\n            dispatch(setAuthData(null, null, null, false))\n        }\n    }\n}\n\nexport const setAuthData = (id, email, login, isAuth) => {\n    return {type: SET_AUTH_USER_DATA, data: {id, email, login, isAuth}}\n};\n\nexport default authReducer","import {INITIALIZED_SUCCESS} from \"../actionType\";\nimport {auth} from \"./AuthReducer\";\n\n\nconst initialState = {\n    initialized: false,\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default:\n            return state\n    }\n};\n\nexport const initializeApp = () => (dispatch) => {\n    let authPromise = dispatch(auth())\n    authPromise.then(()=>{\n        dispatch(initialized_success())\n    })\n}\n\nexport const initialized_success = () => {\n    return {type:INITIALIZED_SUCCESS}\n};\n\nexport default authReducer","import React, {Component} from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {auth, userLogout} from \"../../redux/redusers/AuthReducer\";\nimport {initializeApp} from \"../../redux/redusers/appReducer\";\n\n\nclass HeaderContainer extends Component{\n\n    render() {\n        return <Header {...this.props} userLogout={this.props.userLogout} authProfile={this.props.authProfile}/>\n    }\n}\nlet mapStateToProps = (state) =>({\n    authProfile: state.authProfile,\n})\n\nexport default connect(mapStateToProps, {initializeApp, auth, userLogout})(HeaderContainer)\n","import React from \"react\";\nimport s from \"./Login.module.css\"\nimport {reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {createdField, Input} from \"../common/FormsControl/FormsControl\";\nimport {maxLengthCreator, minLengthCreator, required} from \"../../helper/FormValidation/FromValidation\";\nimport {userLogin} from \"../../redux/redusers/AuthReducer\";\nimport {Redirect} from \"react-router-dom\";\n\n\nconst maxLength = maxLengthCreator(20)\nconst minLength = minLengthCreator(6)\n\nconst LoginForm = (props) => {\n    return(\n        <form onSubmit={props.handleSubmit} className={s.login_form}>\n            <div className={s.form_group}>\n                {createdField('Email',[required,maxLength, minLength], 'Input' , 'Email', 'text')}\n            </div>\n            <div className={s.form_group}>\n                {createdField('Password',[required,maxLength, minLength], 'Input' , 'Password', 'password')}\n            </div>\n            <div className={s.form_group}>\n                {createdField(null,[], 'input' , 'rememberMe', 'checkbox')}\n            </div>\n            {props.error ? <div className={s.formError}>\n                {props.error}\n            </div> : null }\n            <button className={s.btn}>Login</button>\n        </form>\n    )\n}\n\nlet LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        let { Email, Password, rememberMe } = formData\n        props.userLogin( Email, Password, rememberMe )\n    }\n    if(props.isAuth){\n        return <Redirect to='/profile'/>\n    }\n\n    return(\n        <div>\n            <h1>LOGIN</h1>\n            <LoginReduxForm setUserLogin={props.userLogin} onSubmit={onSubmit} />\n        </div>\n    )\n}\nlet  mapStateToProps = (state) =>{\n    return{\n        isAuth: state.authProfile.isAuth\n    }\n}\n\nexport default connect(mapStateToProps,{userLogin})(Login)","import React, {Component} from 'react';\nimport './App.css';\nimport {Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/news/News\";\nimport Music from \"./components/music/Music\";\nimport Settings from \"./components/settings/settings\";\nimport DialogsContainer from \"./components/dialogs/DialogsContainer\";\nimport NavContainer from \"./components/nav/NavContainer\";\nimport UsersContainer from \"./components/users/UsersContainer\";\nimport ProfileContainer from \"./components/profile/ProfileContainer\";\nimport HeaderContainer from \"./components/header/HeaderContainer\";\nimport Login from \"./components/login/Login\";\nimport {connect} from \"react-redux\";\nimport Preloader from \"./components/Preloader/Preloader\";\nimport {initializeApp} from \"./redux/redusers/appReducer\";\nimport {compose} from \"redux\";\n\nclass App extends Component{\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized){\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <NavContainer/>\n                <div className='content'>\n                    <Route path='/profile/:id?' render={ () => <ProfileContainer/>}/>\n                    <Route  path='/dialogs' render={ () => <DialogsContainer/>}/>\n                    <Route path='/users' component={UsersContainer}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                    <Route path='/login' component={Login}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\nexport default compose(\n    withRouter,\n    connect(mapStateToProps,{initializeApp})\n) (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nconst initialState = {\n    friends:[\n        {id:1, name: \"Andry\"},\n        {id:2, name: \"Maks\"},\n        {id:3, name: \"Alex\"}\n    ]\n};\n\nconst sidebarReducer = (state = initialState, action) => {\n\n    return state\n};\nexport default sidebarReducer\n","import dialogsReducer from \"./dialogsReducer\";\nimport profileReducer from \"./profileReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\nimport {combineReducers} from \"redux\";\nimport usersReducer from \"./usersReducer\";\nimport authReducer from \"./AuthReducer\";\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./appReducer\";\n\nexport let reducers = combineReducers({\n    dialogsPage:dialogsReducer,\n    profilePage:profileReducer,\n    sidebar:sidebarReducer,\n    usersPage:usersReducer,\n    authProfile:authReducer,\n    form: formReducer,\n    app: appReducer\n});","import {applyMiddleware, compose, createStore} from \"redux\";\nimport {reducers} from \"./redusers/rootReducers\";\nimport reduxThunk from \"redux-thunk\";\n\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        }) : compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)))\n\nwindow.store = store\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>,\n    document.getElementById('root')\n\n\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_form\":\"Login_login_form__3wDop\",\"btn\":\"Login_btn__ZoWax\",\"formError\":\"Login_formError__27NTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new_post_block\":\"MyPosts_new_post_block__2BBXl\",\"avatar\":\"MyPosts_avatar__M76tK\",\"item\":\"MyPosts_item__2_tPA\",\"postItem\":\"MyPosts_postItem__3-JhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Pagination_page__1Ba5I\",\"pagination\":\"Pagination_pagination__1KkdA\",\"selected\":\"Pagination_selected__dtL8e\",\"prevPagesArr\":\"Pagination_prevPagesArr__2C8V7\",\"nextPagesArr\":\"Pagination_nextPagesArr__22fRS\"};","module.exports = __webpack_public_path__ + \"static/media/631929649c.945f33b6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1MOL-\",\"auth_block\":\"Header_auth_block__3qiUV\"};"],"sourceRoot":""}